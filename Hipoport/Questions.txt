1. 

Недостатък :
Унаследените функции работят по-бавно от нормалната функция.
Често членовете на данни в базовия клас остават неизползвани, което може да доведе до загуба на памет.
Наследството увеличава връзката между базовия клас и производния клас.

Предимства:
Когато клас наследява или извлича друг клас, той може да получи достъп до цялата функционалност на наследения клас.
Съществуващият код се използва повторно, това води до по-малко разходи за разработка и поддръжка.
Наследството прави подкласовете да следват стандартен интерфейс.
Наследяването помага за намаляване на излишността на кода и поддържа разширяемостта на кода.

2.
Generics  -> "обединяване на всички типове в един"
Generics позволява да се дефинират клас и методи като списъци, хеш таблица и опашка и т.н. с тип "T" като параметър.

3.
Бих използвал SortedDictionary, защото знам, че Keys са сортирани и така ще мога да оптимизирам search algorithm, 
за да намери елемента по-бързо.

4
Разпределение на паметта:
Garbage Collector е частта от .NET framework, която разпределя и освобождава памет.
Когато се стартира нов процес, изпълнението запазва адресно пространство за процеса.
Обектите се разпределят в "heap" непрекъснато един след друг.
Разпределението на паметта е много бърз процес, тъй като е просто добавяне на стойност към указател.

Освобождаване на паметта:
Когато GC изпълнява колекция, тя освобождава само обекти, които вече не се използват от приложението.
Ако даден обект е недостъпен, GC счита, че вече не се използва и освобождава паметта, заета от обекта.


